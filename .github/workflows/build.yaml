name: Wol Script Build
on:
  push:
    tags:
    - v*

jobs:
  create:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release-${{ github.ref_name }}
          draft: false
          prerelease: false

  build:
    permissions: write-all
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]
        os: [linux, windows, darwin]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.5

      - name: Build
        run: go build -o wol-${{ matrix.os }}-${{ matrix.arch }}
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0

      - name: Packaging
        run:
          zip wol-${{ matrix.os }}-${{ matrix.arch }}-${{ github.ref_name }}.zip wol-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: wol-${{ matrix.os }}-${{ matrix.arch }}-${{ github.ref_name }}.zip
          asset_name: wol-${{ matrix.os }}-${{ matrix.arch }}-${{ github.ref_name }}.zip
          asset_content_type: application/zip
